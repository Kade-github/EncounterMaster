# Copyright (c) 2019-2020-2021-2022-2023 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT
#
# The peculiarity of this workflow is that assumes vcpkg stored as a submodule of 
# this repository.
# The workflow does the following:
# - Sets up vcpkg if needed, then run CMake with CMakePreset.json using a configuration
#   that leverages the vcpkg's toolchain file. This will automatically run vcpkg to install
#   dependencies described by the vcpkg.json manifest file. 
#   vcpkg's Binary Caching backed by GH Action cache is being used. It will be a no-op if 
#   dependencies are restored from GH Action cache.
# - Finally builds the sources with Ninja.
name: hosted-ninja-vcpkg_submod-cacheoff
on: [push, workflow_dispatch]

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          # This is useful to avoid https://github.com/microsoft/vcpkg/issues/25349
          # which is caused by missing Git history on the vcpkg submodule which ports 
          # try to access. 
          # Do not use if not needed, since it slows down the checkout of sources.
          fetch-depth: 0

      - uses: lukka/get-cmake@latest
      - name: List $RUNNER_WORKSPACE before vcpkg is setup
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Install libltdl-dev
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install libltdl-dev
        shell: bash
      
      - name: Install x11
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install libx11-dev libxft-dev libxext-dev
        shell: bash
        
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        id: runvcpkg
        with:
          vcpkgArguments: '@vcpkg.json'

      - name: Run CMake+vcpkg+Ninja
        uses: lukka/run-cmake@v10
        id: runcmake
        with:
          cmakeListsTxtPath: 'CMakeLists.txt'
          configurePreset: 'ninja-multi-vcpkg'
          buildPreset: 'ninja-multi-vcpkg'
  
      - name: Upload build directory
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }} - Build (No Assets)
          path: builds/ninja-multi-vcpkg/Debug/